<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PrintForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="PrintForm1.PrinterSettings" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAACdTeXN0ZW0uRHJh
        d2luZy5QcmludGluZy5QcmludGVyU2V0dGluZ3MSAAAAC3ByaW50ZXJOYW1lCmRyaXZlck5hbWUKb3V0
        cHV0UG9ydAtwcmludFRvRmlsZRRwcmludERpYWxvZ0Rpc3BsYXllZApleHRyYWJ5dGVzCWV4dHJhaW5m
        bwZjb3BpZXMGZHVwbGV4B2NvbGxhdGUTZGVmYXVsdFBhZ2VTZXR0aW5ncwhmcm9tUGFnZQZ0b1BhZ2UH
        bWF4UGFnZQdtaW5QYWdlCnByaW50UmFuZ2UMZGV2bW9kZWJ5dGVzDWNhY2hlZERldm1vZGUBAQEAAAAH
        AAQEBAAAAAAEAAcBAQcCBx5TeXN0ZW0uRHJhd2luZy5QcmludGluZy5EdXBsZXgCAAAAIFN5c3RlbS5E
        cmF3aW5nLlByaW50aW5nLlRyaVN0YXRlAgAAACRTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QYWdlU2V0
        dGluZ3MCAAAACAgICCJTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludFJhbmdlAgAAAAcCAgAAAAoG
        AwAAAAAJAwAAAAAAAAAK//8F/P///x5TeXN0ZW0uRHJhd2luZy5QcmludGluZy5EdXBsZXgBAAAAB3Zh
        bHVlX18ACAIAAAD/////Bfv///8gU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuVHJpU3RhdGUBAAAABXZh
        bHVlAAICAAAAAAkGAAAAAAAAAAAAAAAPJwAAAAAAAAX5////IlN5c3RlbS5EcmF3aW5nLlByaW50aW5n
        LlByaW50UmFuZ2UBAAAAB3ZhbHVlX18ACAIAAAAAAAAAAAAKBQYAAAAkU3lzdGVtLkRyYXdpbmcuUHJp
        bnRpbmcuUGFnZVNldHRpbmdzBwAAAA9wcmludGVyU2V0dGluZ3MFY29sb3IJcGFwZXJTaXplC3BhcGVy
        U291cmNlEXByaW50ZXJSZXNvbHV0aW9uCWxhbmRzY2FwZQdtYXJnaW5zBAQEBAQEBCdTeXN0ZW0uRHJh
        d2luZy5QcmludGluZy5QcmludGVyU2V0dGluZ3MCAAAAIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlRy
        aVN0YXRlAgAAACFTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QYXBlclNpemUCAAAAI1N5c3RlbS5EcmF3
        aW5nLlByaW50aW5nLlBhcGVyU291cmNlAgAAAClTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludGVy
        UmVzb2x1dGlvbgIAAAAgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuVHJpU3RhdGUCAAAAH1N5c3RlbS5E
        cmF3aW5nLlByaW50aW5nLk1hcmdpbnMCAAAAAgAAAAkBAAAAAff////7////AAoKCgH2////+////wAJ
        CwAAAAULAAAAH1N5c3RlbS5EcmF3aW5nLlByaW50aW5nLk1hcmdpbnMIAAAABGxlZnQFcmlnaHQDdG9w
        BmJvdHRvbQpkb3VibGVMZWZ0C2RvdWJsZVJpZ2h0CWRvdWJsZVRvcAxkb3VibGVCb3R0b20AAAAAAAAA
        AAgICAgGBgYGAgAAAGQAAABkAAAAZAAAAGQAAAAAAAAAAABZQAAAAAAAAFlAAAAAAAAAWUAAAAAAAABZ
        QAs=
</value>
  </data>
</root>